!function(e){var t={};function i(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=e,i.c=t,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)i.d(r,s,function(t){return e[t]}.bind(null,s));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=3)}([function(e,t){e.exports=require("fs")},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.Record=class{constructor(e,t,i,r,s){this.a=e,this.c=t,this.x=i,this.y=r,this.z=s,this.getValue=(()=>10*this.a*(Math.pow(this.x,2)+3*Math.pow(this.c,3)*Math.pow(this.z,4)-5*Math.pow(this.y,7))),this.getRecordAsArray=(()=>[this.a,this.c,this.x,this.y,this.z]),this.getRecordAsInt32Array=(()=>Int32Array.from([this.a,this.c,this.x,this.y,this.z]))}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.numberOfRecordsToGenerate=17,t.sizeOfRecord=20,t.sizeOfInt=4,t.numbersInRecord=5,function(e){e[e.EOF=0]="EOF",e[e.SWITCH_FILE=1]="SWITCH_FILE",e[e.SERIES_IN_FIRST_FILE_END=2]="SERIES_IN_FIRST_FILE_END",e[e.SERIES_IN_SECOND_FILE_END=3]="SERIES_IN_SECOND_FILE_END",e[e.FIRST_FILE_EOF=4]="FIRST_FILE_EOF",e[e.SORTING_ENDS=5]="SORTING_ENDS"}(t.events||(t.events={}))},function(e,t,i){"use strict";var r=this&&this.__awaiter||function(e,t,i,r){return new(i||(i=Promise))(function(s,n){function o(e){try{l(r.next(e))}catch(e){n(e)}}function c(e){try{l(r.throw(e))}catch(e){n(e)}}function l(e){e.done?s(e.value):new i(function(t){t(e.value)}).then(o,c)}l((r=r.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=i(4);!function(){r(this,void 0,void 0,function*(){const e=new s.SortService;yield e.generateFileToSort(),yield e.sort()})}()},function(e,t,i){"use strict";var r=this&&this.__awaiter||function(e,t,i,r){return new(i||(i=Promise))(function(s,n){function o(e){try{l(r.next(e))}catch(e){n(e)}}function c(e){try{l(r.throw(e))}catch(e){n(e)}}function l(e){e.done?s(e.value):new i(function(t){t(e.value)}).then(o,c)}l((r=r.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=i(0),n=i(5),o=i(6),c=i(7);t.SortService=class{constructor(){this.generateFileToSort=(()=>r(this,void 0,void 0,function*(){const e=this.dataService.getDataAsInt32Array();s.writeFile("./unsortedInput",n.Buffer.from(e.buffer),e=>{if(e)throw e;console.log('The "data to append" was appended to file!')})})),this.sort=(()=>r(this,void 0,void 0,function*(){for(;5!==(yield this.divide());)this.firstFile.setNewReadable(),this.secondFile.setNewReadable(),this.inputFile.setNewWritable(),yield this.merge(),this.inputFile.setNewReadable(),this.firstFile.setNewWritable(),this.secondFile.setNewWritable(),yield this.inputFile.printFile();yield this.inputFile.printFile()})),this.finishSeries=((e,t)=>r(this,void 0,void 0,function*(){const i=this.filesArray[e];let r,s=yield i.readRecord(),n=t;if(this.inputFile.writeRecord(t),!s)return{firstFileRecord:null,secondFileRecord:null,event:0};for(;n.getValue()<s.getValue();)this.inputFile.writeRecord(s),n=s,null===(s=yield i.readRecord())&&(r=0);return{firstFileRecord:1===e&&s,secondFileRecord:2===e&&s,event:0===r?0:1===e?2:3}})),this.selectSmallerRecordAndGetNewOne=(e=>r(this,void 0,void 0,function*(){const t=Object.assign({},e),i=this.selectSmallerRecord(t.currentFirstFileRecord,t.currentSecondFileRecord);if(i===t.currentFirstFileRecord){const e=yield this.firstFile.readRecord();if(null===e)return Object.assign({},t,{smallerRecord:i,firstFileEnds:!0});e.getValue()<t.currentFirstFileRecord.getValue()&&(t.firstFileSeriesEnds=!0),t.previousFirstFileRecord=t.currentFirstFileRecord,t.currentFirstFileRecord=e}else if(i===t.currentSecondFileRecord){const e=yield this.secondFile.readRecord();if(null===e)return Object.assign({},t,{smallerRecord:i,secondFileEnds:!0});e.getValue()<t.currentSecondFileRecord.getValue()&&(t.secondFileSeriesEnds=!0),t.previousSecondFileRecord=t.currentSecondFileRecord,t.currentSecondFileRecord=e}return Object.assign({},t,{smallerRecord:i})})),this.merge=(()=>r(this,void 0,void 0,function*(){const e={firstFileSeriesEnds:!1,secondFileSeriesEnds:!1,firstFileEnds:!1,secondFileEnds:!1,previousFirstFileRecord:null,previousSecondFileRecord:null,currentFirstFileRecord:yield this.firstFile.readRecord(),currentSecondFileRecord:yield this.secondFile.readRecord(),smallerRecord:null};let t;for(;;){if(Object.assign(e,yield this.selectSmallerRecordAndGetNewOne(Object.assign({},e))),this.inputFile.writeRecord(e.smallerRecord),e.firstFileEnds){this.inputFile.writeRecord(e.currentSecondFileRecord),this.fillWithRestOfRecords(this.secondFile);break}if(e.secondFileEnds){this.inputFile.writeRecord(e.currentFirstFileRecord),this.fillWithRestOfRecords(this.firstFile);break}if(e.firstFileSeriesEnds){if(0===(t=yield this.finishSeries(this.secondFile.id,e.currentSecondFileRecord)).event){e.currentFirstFileRecord&&this.inputFile.writeRecord(e.currentFirstFileRecord),yield this.fillWithRestOfRecords(this.firstFile);break}e.currentSecondFileRecord=t.secondFileRecord}else if(e.secondFileSeriesEnds){if(0===(t=yield this.finishSeries(this.firstFile.id,e.currentFirstFileRecord)).event){e.currentSecondFileRecord&&this.inputFile.writeRecord(e.currentSecondFileRecord),yield this.fillWithRestOfRecords(this.secondFile);break}e.currentFirstFileRecord=t.firstFileRecord}e.secondFileSeriesEnds=!1,e.firstFileSeriesEnds=!1}})),this.fillWithRestOfRecords=(e=>r(this,void 0,void 0,function*(){let t=yield e.readRecord();for(;t;)this.inputFile.writeRecord(t),t=yield e.readRecord()})),this.selectSmallerRecord=((e,t)=>e.getValue()<t.getValue()?e:t),this.divide=(()=>r(this,void 0,void 0,function*(){let e=0;for(this.currentFile=this.firstFile,this.currentRecord=void 0;0!==(yield this.writeSeries());)this.switchFile(),e++;if(0===e)return 5})),this.writeSeries=(()=>r(this,void 0,void 0,function*(){return new Promise(e=>r(this,void 0,void 0,function*(){let t=this.currentRecord||(yield this.inputFile.readRecord()),i=yield this.inputFile.readRecord();for(this.currentFile.writeRecord(t),null===i&&e(0);t.getValue()<i.getValue();)this.currentFile.writeRecord(i),t=i,null===(i=yield this.inputFile.readRecord())&&e(0);this.currentRecord=i,e(1)}))})),this.switchFile=(()=>{this.currentFile.id===this.firstFile.id?this.currentFile=this.secondFile:this.currentFile.id===this.secondFile.id&&(this.currentFile=this.firstFile)}),this.dataService=new o.DataService(void 0),this.inputFile=new c.File("./unsortedInput",0),this.firstFile=new c.File("./firstFile",1),this.currentFile=this.firstFile,this.secondFile=new c.File("./secondFile",2),this.filesArray=[this.inputFile,this.firstFile,this.secondFile]}}},function(e,t){e.exports=require("buffer")},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(1),s=i(2);t.DataService=class{constructor(e){this.getDataAsArray=(()=>this.data.map(e=>e.getRecordAsArray())),this.getFlatData=(()=>[].concat(...this.getDataAsArray())),this.getDataAsInt32Array=(()=>Int32Array.from(this.getFlatData())),this.generateData=(()=>{const e=[];for(let t=0;t<s.numberOfRecordsToGenerate;t++)e.push(this.generateRecord());this.data=e}),this.generateRecord=(()=>new r.Record(Math.ceil(10*Math.random()),Math.ceil(10*Math.random()),Math.ceil(10*Math.random()),Math.ceil(10*Math.random()),Math.ceil(10*Math.random()))),e?this.data=e:this.generateData()}}},function(e,t,i){"use strict";var r=this&&this.__awaiter||function(e,t,i,r){return new(i||(i=Promise))(function(s,n){function o(e){try{l(r.next(e))}catch(e){n(e)}}function c(e){try{l(r.throw(e))}catch(e){n(e)}}function l(e){e.done?s(e.value):new i(function(t){t(e.value)}).then(o,c)}l((r=r.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=i(0),n=i(2),o=i(1);t.File=class{constructor(e,t){this.path=e,this.id=t,this.initializeRecord=(e=>new o.Record(e[0],e[1],e[2],e[3],e[4])),this.printFile=(()=>r(this,void 0,void 0,function*(){let e;for(this.setNewReadable(),console.log("printFILE");e=yield this.readRecord();)console.log(e.getValue());console.log("printEND")})),this.readRecord=(()=>r(this,void 0,void 0,function*(){const e=new Int32Array(n.numbersInRecord),t=yield this.getDataBuffer();if(null===t)return this.readPosition=0,null;for(let i=0;i<n.numbersInRecord;i++)if(e[i]=t.readInt32LE(i*n.sizeOfInt),null===e[i])return this.readPosition=0,null;return this.initializeRecord(e)})),this.getDataBuffer=(()=>new Promise(e=>{const t=s.createReadStream(this.path,{start:this.readPosition,end:this.readPosition+n.sizeOfRecord});this.readPosition+=n.sizeOfRecord,t.on("readable",()=>{e(t.read(n.sizeOfRecord))})})),this.writeRecord=(e=>{const t=Buffer.from(e.getRecordAsInt32Array().buffer);this.writable.write(t),this.writePosition+=n.sizeOfRecord}),this.setNewWritable=(()=>{this.writable=s.createWriteStream(this.path)}),this.setNewReadable=(()=>{this.readPosition=0}),this.readPosition=0,this.writePosition=0,this.writable=s.createWriteStream(this.path)}}}]);
//# sourceMappingURL=build.js.map